# Architecture

# MVC
# ModelClasses
	PaintModel
# ViewClasses
	View
# ControllerClasses
	PaintPanel ShapeChooserPanel

# (other logical  ways of collecting your classes)
	Strategy Pattern
# Design Patterns Used (collections of classes into DP)
--------------------------------------------------------------------------------
Name: Strategy Pattern
Pattern Name: Strategy Pattern
Reference: (link to a specific version of a DP in https://www.oodesign.com/), for example...
	https://www.oodesign.com/images/design_patterns/behavioral/iterator_implementation_-_uml_class_diagram.gif

Purpose:
	(why is this pattern implemented? think SOLID as possible reasons and explain in terms of the application)

UML:
	UML.png


Classes:
	(list classes involved and their roles based on Reference above)
	ShapeStrategy: An interface for all strategies for the shapes which tells them how to react base on different
	               action of mouse
	CircleStrategy: a strategy class for circle
	OvalStrategy: a strategy class for Oval
    PolylineStrategy: a strategy class for Polyline
    RectangleStrategy: a strategy class for Rectangle
    SelectionBoxStrategy: a strategy class for SelectionBox
    SquareStrategy: a strategy class for Square
    SquiggleStrategy: a strategy class for Squiggle
    TriangleStrategy: a strategy class for Triangle

Usage:
	(Briefly describe why a developer would be playing with this part of
	the code and how they would use it to achieve that purpose)

--------------------------------------------------------------------------------
# High Level Architecture Discussion

	(Put all of the above together in a collection of stories which tell the
	developer how to modify, extend, or understand your code)

	(For each story, pull from and modify the highLevelTemplate.txt)

